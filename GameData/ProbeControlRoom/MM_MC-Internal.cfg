// Initial setup with default config
// IVA mods providing alternative mission control layouts can modify this
// node in any phase before LAST[ProbeControlRoom] to change the default setup
PROBECONTROLROOM_CONFIG 
{
	INTERNAL 
	{
		name:NEEDS[!ASET/ASET_Props] = MissionControl
		name:NEEDS[ASET/ASET_Props] = MissionControl_ASET
	}

	MODULE
	{
		name = ProbeControlRoomPart
	}
	
	MODULE:NEEDS[RasterPropMonitor]
	{
		name = RasterPropMonitorComputer
	}
	
	MODULE:NEEDS[RevIVA]
	{
		name = ModuleIVASwitch
		internalName:NEEDS[!ASET/ASET_Props] = MissionControl
		internalName:NEEDS[ASET/ASET_Props] = MissionControl_ASET
	}
	MODULE:NEEDS[RevIVA]
	{
		name = ModuleB9PartSwitch
		moduleID = IVASwitch
		switcherDescription = IVA
		switcherDescriptionPlural = IVAs
		switchInFlight = true
		uiGroupName = IVASwitch
		uiGroupDisplayName = IVA Switch
		SUBTYPE:NEEDS[ASET/ASET_Props]
		{
			name = MissionControl_ASET
			primaryColor = White
			secondaryColor = White
			descriptionSummary = Default-ASET
			descriptionDetail = Use Mission Control layout from ProbeControlRoom using ASET props.
			MODULE
			{
				IDENTIFIER { name = ModuleIVASwitch }
				DATA { internalName = MissionControl_ASET }
			}
		}
		SUBTYPE
		{
			name = MissionControl
			primaryColor = White
			secondaryColor = White
			descriptionSummary = Default
			descriptionDetail = Use Mission Control layout from ProbeControlRoom.
			MODULE
			{
				IDENTIFIER { name = ModuleIVASwitch }
				DATA { internalName = MissionControl }
			}
		}
	}
}

// RevIVA setup for known IVA mods
@PROBECONTROLROOM_CONFIG:NEEDS[DE_IVAExtension]
{
	@MODULE[ModuleB9PartSwitch]
	{
		SUBTYPE
		{
			// note the DE name here matches what Reviva uses internally and has some interactions with DE_IVA:
			// https://github.com/JonnyOThan/DE_IVAExtension/blob/6a649dd3ba6fd61397b3e423c6f89d642be6ab79/GameData/DE_IVAExtension/Parts.cfg#L135
			name = DE
			primaryColor = Red
			secondaryColor = White
			descriptionSummary = DE IVA
			descriptionDetail = Use Mission Control layout from DE IVA Extension
			MODULE 
			{
				IDENTIFIER { name = ModuleIVASwitch }
				DATA { internalName = DE_MissionControl }
			}
		}
	}
}

@PROBECONTROLROOM_CONFIG:NEEDS[KSA]
{
	@MODULE[ModuleB9PartSwitch]
	{
		SUBTYPE
		{
			name = KSA_MissionControl
			primaryColor = Blue
			secondaryColor = White
			descriptionSummary = KSA
			descriptionDetail = Use Mission Control layout from KSA
			MODULE 
			{
				IDENTIFIER { name = ModuleIVASwitch }
				DATA { internalName = KSA_MissionControl }
			}
		}
	}
}

@PROBECONTROLROOM_CONFIG:NEEDS[PCRIVAPLUS]
{
	@MODULE[ModuleB9PartSwitch]
	{
		SUBTYPE
		{
			name = PCRIVAPLUS_MissionControl_RETRO
			primaryColor = Blue
			secondaryColor = Red
			descriptionSummary = Retro
			descriptionDetail = Use Old school NASA-style layout from PCRIVAPLUS
			MODULE 
			{
				IDENTIFIER { name = ModuleIVASwitch }
				DATA { internalName = PCRIVAPLUS_MissionControl_RETRO }
			}
		}
	}
}

// Add the mission control INTERNAL to every probe that does not yet have an INTERNAL
@PART:HAS[@MODULE[ModuleCommand],!INTERNAL]:FOR[ProbeControlRoom]
{
	#@PROBECONTROLROOM_CONFIG/MODULE[ProbeControlRoomPart] {}
	#@PROBECONTROLROOM_CONFIG/MODULE[RasterPropMonitorComputer]:NEEDS[RasterPropMonitor] {}
	#@PROBECONTROLROOM_CONFIG/INTERNAL {}
}

// Add the RevIVA support to any probe that has PCR support but no IVA switch.
// Needed to support existing IVA mods that support PCR but not RevIVA
@PART:HAS[@MODULE[ProbeControlRoomPart],!MODULE[ModuleB9PartSwitch]:HAS[#moduleID[IVASwitch]]]:FOR[ProbeControlRoom]:NEEDS[RevIVA]
{
	#@PROBECONTROLROOM_CONFIG/MODULE[ModuleB9PartSwitch]:HAS[#moduleID[IVASwitch]] {}
	#@PROBECONTROLROOM_CONFIG/MODULE[ModuleIVASwitch] {}
}


// Clean up the config node
-PROBECONTROLROOM_CONFIG:LAST[ProbeControlRoom] {}

@INTERNAL:HAS[@MODEL:HAS[#model[ProbeControlRoom/Spaces/MissionControl/MissionControl]]&!PROP:HAS[@MODULE[CivilianKerbal]]]
{
	!MODULE[InternalCameraSwitch],* {}

	PROP
	{
		name = EmptyProp
		position = -0.451999992, 0, 0
		rotation = 0, -0.707106829, 0, -0.707106709

		MODULE
		{
			name = InternalSeat
			seatTransformName = model
			kerbalEyeOffset = 0,0.2,0
		}

		MODULE
		{
			name = CivilianKerbal
			prefabName = Instructor_Gene
			childObjectName = instructor_Gene
			headTransformPath = model01/head01
			kerbalName = Gene Kerman
		}
	}
	PROP
	{
		name = EmptyProp
		position = 0.575999975, 0, -1.49000001
		rotation = 0, -0.707106829, 0, -0.707106709

		MODULE
		{
			name = InternalSeat
			seatTransformName = model
			kerbalEyeOffset = 0,0.2,0
		}

		MODULE
		{
			name = CivilianKerbal
			prefabName = Strategy_MechanicGuy
			childObjectName = Gus
			headTransformPath = model01/head02
			kerbalName = Gus Kerman
		}
	}
	PROP
	{
		name = EmptyProp
		position = 0.513000011, 0, 1.53999996
		rotation = 0, -0.707106829, 0, -0.707106709

		MODULE
		{
			name = InternalSeat
			seatTransformName = model
			kerbalEyeOffset = 0,0.2,0
		}

		MODULE
		{
			name = CivilianKerbal
			prefabName = Strategy_ScienceGuy
			childObjectName = linus
			headTransformPath = model01/head01
			kerbalName = Linus Kerman
		}
	}
}
